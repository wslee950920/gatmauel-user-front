{"version":3,"sources":["lib/windowDimensions.js","components/review/Feed/index.js","components/review/ReviewItem.jsx","components/review/Write/index.js","components/review/FullScreenDialog/index.js","components/review/index.js","page/Review/index.js"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useStyles","makeStyles","theme","media","paddingTop","card","maxWidth","breakpoints","values","sm","subHeader","fontFamily","stepper","flexGrow","backgroundColor","justifyContent","marginBottom","spacing","content","padding","React","memo","data","classes","activeStep","Card","className","CardHeader","avatar","Avatar","aria-label","action","IconButton","title","subheader","subheaderTypographyProps","variant","CardMedia","image","CardContent","root","MobileStepper","steps","position","Typography","color","text","flexDirection","style","useTheme","matches","useMediaQuery","up","ListItem","CssBaseline","Container","disableGutters","background","border","borderRadius","textArea","fontSize","box","display","leftIcons","handleClickOpen","dialog","TextareaAutosize","rowsMin","rowsMax","clsx","onClick","readOnly","Divider","List","size","header","Transition","forwardRef","props","ref","Slide","direction","open","handleClose","Dialog","fullScreen","onClose","TransitionComponent","Button","paper","marginTop","Review","xSmall","small","bSmall","between","datas","useRef","Array","fill","setOpen","rowHeight","useMemo","rowRenderer","useCallback","index","key","current","isScrolling","registerChild","scrollTop","autoHeight","rowCount","length","parseInt","list","ReviewPage","SearchBar"],"mappings":"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","file":"static/js/13.d1ea3127.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst getWindowDimensions = () => {\n  const { innerWidth: width, innerHeight: height } = window;\n\n  return {\n    width,\n    height,\n  };\n};\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    //뒷정리\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import React, { useState } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\n\nconst useStyles = makeStyles((theme) => ({\n  media: {\n    height: 0,\n    paddingTop: \"100%\", // 1:1\n  },\n  card: {\n    maxWidth: theme.breakpoints.values.sm,\n  },\n  subHeader: {\n    fontFamily: \"Roboto\",\n  },\n  stepper: {\n    flexGrow: 1,\n    backgroundColor: \"#fff\",\n    justifyContent: \"center\",\n    marginBottom: theme.spacing(2),\n  },\n  content: {\n    padding: theme.spacing(0.5, 1.5),\n    height: \"10rem\",\n  },\n}));\n\nconst Feed = ({ data }) => {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = useState(0);\n\n  return (\n    <Card className={classes.card}>\n      <CardHeader\n        avatar={<Avatar aria-label=\"avatar\" />}\n        action={\n          <IconButton aria-label=\"more\">\n            <MoreVertIcon />\n          </IconButton>\n        }\n        title=\"맨유경비원\"\n        subheader=\"20/09/29\"\n        subheaderTypographyProps={{\n          variant: \"caption\",\n          className: classes.subHeader,\n        }}\n      />\n      <CardMedia className={classes.media} image=\"images/menu/1.jpg\" />\n      <CardContent classes={{ root: classes.content }}>\n        <MobileStepper\n          variant=\"dots\"\n          steps={3}\n          position=\"static\"\n          activeStep={activeStep}\n          className={classes.stepper}\n        />\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          {data.text}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default React.memo(Feed);\n","import React from \"react\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nimport Feed from \"./Feed\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexDirection: \"column\",\n    width: \"100%\",\n  },\n}));\n\nconst ReviewItem = ({ data, style }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\n\n  return (\n    <>\n      <ListItem style={style} classes={{ root: classes.root }}>\n        <CssBaseline />\n        <Container maxWidth=\"sm\" disableGutters={!matches}>\n          <Feed data={data} />\n        </Container>\n      </ListItem>\n    </>\n  );\n};\n\nexport default React.memo(ReviewItem);\n","import React from \"react\";\nimport useWindowDimensions from \"../../../lib/windowDimensions\";\nimport clsx from \"clsx\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport CameraAltIcon from \"@material-ui/icons/CameraAlt\";\nimport PhotoAlbumIcon from \"@material-ui/icons/PhotoAlbum\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst useStyles = makeStyles((theme) => ({\n  background: {\n    backgroundColor: \"white\",\n    border: \"thin solid #dcdcdc\",\n    borderRadius: \"2px\",\n    width: \"100%\",\n  },\n  textArea: {\n    width: \"100%\",\n    border: \"none\",\n    fontSize: \"1rem\",\n    fontFamily: \"MaplestoryOTFBold\",\n    backgroundColor: \"white\",\n  },\n  box: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    padding: theme.spacing(0),\n    justifyContent: \"space-between\",\n  },\n  leftIcons: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n}));\n\nconst Write = ({ handleClickOpen, dialog }) => {\n  const classes = useStyles();\n  const { width } = useWindowDimensions();\n\n  return (\n    <div style={{ width: width }}>\n      <CssBaseline />\n      <Container maxWidth=\"sm\">\n        <div className={classes.background}>\n          <TextareaAutosize\n            aria-label=\"write review\"\n            rowsMin={4}\n            rowsMax={clsx(dialog ? 12 : 4)}\n            className={classes.textArea}\n            onClick={handleClickOpen}\n            readOnly={!dialog}\n          />\n          <Divider variant=\"middle\" />\n          <List className={classes.box}>\n            <div className={classes.leftIcons}>\n              <ListItem>\n                <IconButton size=\"small\">\n                  <CameraAltIcon color=\"action\" />\n                </IconButton>\n              </ListItem>\n              <ListItem>\n                <IconButton size=\"small\">\n                  <PhotoAlbumIcon color=\"action\" />\n                </IconButton>\n              </ListItem>\n            </div>\n            <div>\n              <ListItem>\n                <IconButton size=\"small\">\n                  <CreateIcon color=\"action\" />\n                </IconButton>\n              </ListItem>\n            </div>\n          </List>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default React.memo(Write);\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Slide from \"@material-ui/core/Slide\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Write from \"../Write\";\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    padding: theme.spacing(1),\n  },\n  root: {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst FullScreenDialog = ({ open, handleClose }) => {\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      fullScreen\n      open={open}\n      onClose={handleClose}\n      TransitionComponent={Transition}\n    >\n      <div className={classes.root}>\n        <CssBaseline />\n        <Container maxWidth=\"sm\">\n          <div className={classes.header}>\n            <Button onClick={handleClose}>취소</Button>\n            <Button>완료</Button>\n          </div>\n          <Divider />\n        </Container>\n      </div>\n      <Write dialog />\n    </Dialog>\n  );\n};\n\nexport default React.memo(FullScreenDialog);\n","import React, { useRef, useCallback, useMemo, useState } from \"react\";\nimport { List, WindowScroller } from \"react-virtualized\";\nimport useWindowDimensions from \"../../lib/windowDimensions\";\nimport clsx from \"clsx\";\nimport \"react-virtualized/styles.css\"; // only needs to be imported once\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nimport ReviewItem from \"./ReviewItem\";\nimport Write from \"./Write\";\nimport FullScreenDialog from \"./FullScreenDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    [theme.breakpoints.up(\"sm\")]: {\n      marginTop: theme.spacing(1),\n    },\n  },\n}));\n\nconst Review = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const xSmall = useMediaQuery(theme.breakpoints.up(\"xs\"));\n  const small = useMediaQuery(theme.breakpoints.up(\"sm\"));\n  const bSmall = useMediaQuery(theme.breakpoints.between(400, \"sm\"));\n  const { width } = useWindowDimensions();\n  const datas = useRef(\n    new Array(10).fill({\n      text: `Wish I could come, but I'm out of town this…주방 공사합니다.`,\n    })\n  );\n  const [open, setOpen] = useState(false);\n\n  const rowHeight = useMemo(() => {\n    if (small) {\n      return 800;\n    } else if (bSmall) {\n      return 650;\n    } else if (xSmall) {\n      return 600;\n    } else return 550;\n  }, [small, bSmall, xSmall]);\n\n  const rowRenderer = useCallback(\n    ({ index, key, style }) => {\n      const data = datas.current[index];\n\n      return <ReviewItem data={data} style={style} key={key} />;\n    },\n    [datas]\n  );\n  const handleClose = useCallback(() => {\n    setOpen(false);\n  }, []);\n  const handleClickOpen = useCallback(() => {\n    setOpen(true);\n  }, []);\n\n  return (\n    <>\n      <WindowScroller>\n        {({ height, isScrolling, registerChild, scrollTop }) => (\n          <div className={classes.paper}>\n            <Write handleClickOpen={handleClickOpen} />\n            <div ref={registerChild}>\n              <List\n                autoHeight\n                height={height - 56 - 8 - clsx(small ? 0 : 37.09) - 8}\n                rowCount={datas.current.length}\n                rowHeight={rowHeight}\n                width={parseInt(width)}\n                rowRenderer={rowRenderer}\n                list={datas}\n                scrollTop={scrollTop}\n                isScrolling={isScrolling}\n              />\n            </div>\n          </div>\n        )}\n      </WindowScroller>\n      <FullScreenDialog open={open} handleClose={handleClose} />\n    </>\n  );\n};\n\nexport default Review;\n","import React from \"react\";\n\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nimport Header from \"../../components/header\";\nimport Review from \"../../components/review\";\nimport SearchBar from \"../../components/common/SearchBar\";\n\nconst ReviewPage = () => {\n  const theme = useTheme();\n  const small = useMediaQuery(theme.breakpoints.up(\"sm\"));\n  return (\n    <>\n      <Header />\n      {!small && <SearchBar />}\n      <Review />\n    </>\n  );\n};\n\nexport default ReviewPage;\n"],"sourceRoot":""}