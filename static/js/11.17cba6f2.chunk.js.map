{"version":3,"sources":["lib/windowDimensions.js","components/common/RWView.jsx","components/review/context/step.js","components/review/Feed/FeedMenu.jsx","components/review/Feed/CarouselImg/CarouselItem.js","components/review/Feed/CarouselImg/index.js","components/review/Feed/index.js","components/review/ReviewItem.jsx","components/review/FullScreenDialog/index.js","components/review/index.js","page/Review/index.js"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useStyles","makeStyles","theme","background","backgroundColor","border","borderRadius","textArea","fontSize","fontFamily","box","display","flexDirection","padding","spacing","justifyContent","leftIcons","React","memo","handleClickOpen","dialog","notice","classes","style","maxWidth","className","aria-label","rowsMin","clsx","rowsMax","onClick","readOnly","variant","size","color","StepContext","createContext","state","steps","actions","setSteps","StepProvider","children","datas","map","value","action","Provider","Consumer","handleClose","anchorEl","Menu","id","open","Boolean","onClose","MenuItem","src","alt","activeIndex","handleSelect","Container","Carousel","indicators","interval","onSelect","carouselItem","item","Item","key","media","paddingTop","card","breakpoints","values","sm","subHeader","stepper","flexGrow","marginBottom","content","data","index","setAnchorEl","useContext","activeStep","setActiveStep","handleClick","useCallback","e","currentTarget","selectedIndex","step","i","Card","CardHeader","avatar","Avatar","IconButton","aria-haspopup","title","subheader","subheaderTypographyProps","CardMedia","component","CarouselImg","CardContent","root","MobileStepper","position","Typography","text","useTheme","matches","useMediaQuery","up","ListItem","CssBaseline","disableGutters","header","Transition","forwardRef","props","ref","Slide","direction","Dialog","fullScreen","TransitionComponent","Button","Divider","RWView","paper","marginTop","Review","xSmall","small","bSmall","between","setOpen","useRef","pWidth","setpWidth","Array","fill","rowHeight","useMemo","rowRenderer","current","getBoundingClientRect","isScrolling","registerChild","scrollTop","autoHeight","rowCount","length","parseFloat","ReviewPage","SearchBar"],"mappings":"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","file":"static/js/11.17cba6f2.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst getWindowDimensions = () => {\n  const { innerWidth: width, innerHeight: height } = window;\n\n  return {\n    width,\n    height,\n  };\n};\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    //뒷정리\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport CameraAltIcon from \"@material-ui/icons/CameraAlt\";\nimport PhotoAlbumIcon from \"@material-ui/icons/PhotoAlbum\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst useStyles = makeStyles((theme) => ({\n  background: {\n    backgroundColor: \"white\",\n    border: \"thin solid #dcdcdc\",\n    borderRadius: \"2px\",\n    width: \"100%\",\n  },\n  textArea: {\n    width: \"100%\",\n    border: \"none\",\n    fontSize: \"1rem\",\n    fontFamily: \"MaplestoryOTFBold\",\n    backgroundColor: \"white\",\n  },\n  box: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    padding: theme.spacing(0),\n    justifyContent: \"space-between\",\n  },\n  leftIcons: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n}));\n\nconst RWView = ({ handleClickOpen, dialog, notice }) => {\n  const classes = useStyles();\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      <CssBaseline />\n      <Container maxWidth=\"sm\">\n        <div className={classes.background}>\n          <TextareaAutosize\n            aria-label=\"read-write-data\"\n            rowsMin={clsx(notice?12:4)}\n            rowsMax={clsx(dialog ? 12 : 4)}\n            className={classes.textArea}\n            onClick={handleClickOpen}\n            readOnly={!dialog}\n          />\n          {!notice&&(\n            <>\n                <Divider variant=\"middle\" />\n                <List className={classes.box}>\n                    <div className={classes.leftIcons}>\n                        <ListItem>\n                            <IconButton size=\"small\">\n                                <CameraAltIcon color=\"action\" />\n                            </IconButton>\n                        </ListItem>\n                        <ListItem>\n                            <IconButton size=\"small\">\n                                <PhotoAlbumIcon color=\"action\" />\n                            </IconButton>\n                        </ListItem>\n                    </div>\n                    <div>\n                        <ListItem>\n                            <IconButton size=\"small\">\n                                <CreateIcon color=\"action\" />\n                            </IconButton>\n                        </ListItem>\n                    </div>\n                </List>\n            </>\n          )}\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default React.memo(RWView);\n","import React, { createContext, useState } from \"react\";\n\nconst StepContext = createContext({\n  state: { steps: [] },\n  actions: {\n    setSteps: () => {},\n  },\n});\n\nconst StepProvider = ({ children, datas }) => {\n  const [steps, setSteps] = useState(datas.map(() => 0));\n\n  //여기서는 useRef 쓰면 안 된다...\n  const value = {\n    state: { steps },\n    action: { setSteps },\n  };\n\n  return <StepContext.Provider value={value}>{children}</StepContext.Provider>;\n};\n\nconst { Consumer: StepConsumer } = StepContext;\n\nexport { StepProvider, StepConsumer };\n\nexport default StepContext;\n","import React from \"react\";\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst FeedMenu=({handleClose, anchorEl})=>{\n    return (\n        <Menu\n        id=\"feed-menu\"\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleClose}>수정</MenuItem>\n        <MenuItem onClick={handleClose} style={{color:'#C70039'}}>삭제</MenuItem>\n      </Menu>\n    )\n};\n\nexport default React.memo(FeedMenu);","export default [\n  {\n    id: \"0\",\n    src: \"images/menu/1.jpg\",\n    alt: \"칼국수\",\n  },\n  {\n    id: \"1\",\n    src: \"images/menu/2.jpg\",\n    alt: \"전복보쌈\",\n  },\n  {\n    id: \"2\",\n    src: \"images/menu/3.jpg\",\n    alt: \"보쌈정식\",\n  },\n];\n","import React from \"react\";\n\nimport Carousel from \"react-bootstrap/Carousel\";\nimport Container from \"@material-ui/core/Container\";\n\nimport carouselItem from \"./CarouselItem\";\n\nconst CarouselImg = ({ activeIndex, handleSelect }) => {\n  return (\n    <Container>\n      <Carousel\n        indicators={false}\n        interval={20000}\n        activeIndex={activeIndex}\n        onSelect={handleSelect}\n      >\n        {carouselItem.map((item) => (\n          <Carousel.Item key={item.id}>\n            <img className=\"d-block w-100\" src={item.src} alt={item.alt} />\n          </Carousel.Item>\n        ))}\n      </Carousel>\n    </Container>\n  );\n};\n\nexport default React.memo(CarouselImg);\n","import React, { useState, useCallback, useContext } from \"react\";\nimport StepContext from \"../context/step\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\n\nimport FeedMenu from \"./FeedMenu\";\nimport CarouselImg from \"./CarouselImg\";\n\nconst useStyles = makeStyles((theme) => ({\n  media: {\n    height: 0,\n    paddingTop: \"100%\", // 1:1\n  },\n  card: {\n    maxWidth: theme.breakpoints.values.sm,\n  },\n  subHeader: {\n    fontFamily: \"Roboto\",\n  },\n  stepper: {\n    flexGrow: 1,\n    backgroundColor: \"#fff\",\n    justifyContent: \"center\",\n    marginBottom: theme.spacing(1),\n  },\n  content: {\n    padding: theme.spacing(0.5, 1.5),\n    height: \"10rem\",\n  },\n}));\n\nconst Feed = ({ data, index }) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const { state, action } = useContext(StepContext);\n  const [activeStep, setActiveStep] = useState(state.steps[index]);\n\n  const handleClick = useCallback((e) => {\n    setAnchorEl(e.currentTarget);\n  }, []);\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n  }, []);\n  const handleSelect = useCallback(\n    (selectedIndex, e) => {\n      setActiveStep(selectedIndex);\n      action.setSteps((steps) =>\n        steps.map((step, i) => (i === index ? (step = selectedIndex) : step))\n      );\n    },\n    [index, action]\n  );\n\n  return (\n    <>\n      <Card className={classes.card}>\n        <CardHeader\n          avatar={<Avatar aria-label=\"avatar\" />}\n          action={\n            <IconButton\n              aria-label=\"more\"\n              aria-haspopup=\"true\"\n              onClick={handleClick}\n            >\n              <MoreVertIcon />\n            </IconButton>\n          }\n          title=\"맨유경비원\"\n          subheader=\"20/09/29\"\n          subheaderTypographyProps={{\n            variant: \"caption\",\n            className: classes.subHeader,\n          }}\n        />\n        {/**CardMedia에 props를 줬더니 CarouselImg컴포넌트가 받더라... */}\n        <CardMedia\n          className={classes.media}\n          component={CarouselImg}\n          activeIndex={activeStep}\n          handleSelect={handleSelect}\n        />\n        <CardContent classes={{ root: classes.content }}>\n          <MobileStepper\n            variant=\"dots\"\n            steps={3}\n            position=\"static\"\n            activeStep={activeStep}\n            className={classes.stepper}\n          />\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {data.text}\n          </Typography>\n        </CardContent>\n      </Card>\n      <FeedMenu handleClose={handleClose} anchorEl={anchorEl} />\n    </>\n  );\n};\n\nexport default React.memo(Feed);\n","import React from \"react\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nimport Feed from \"./Feed\";\n\nconst ReviewItem = ({ data, style, index }) => {\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\n\n  return (\n    <>\n      <ListItem style={style} >\n        <CssBaseline />\n        <Container maxWidth=\"sm\" disableGutters={!matches}>\n          <Feed data={data} index={index}/>\n        </Container>\n      </ListItem>\n    </>\n  );\n};\n\nexport default React.memo(ReviewItem);\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Slide from \"@material-ui/core/Slide\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\n\nimport RWView from \"../../common/RWView\";\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    padding: theme.spacing(0.5),\n  },\n  root: {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst FullScreenDialog = ({ open, handleClose }) => {\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      fullScreen\n      open={open}\n      onClose={handleClose}\n      TransitionComponent={Transition}\n    >\n      <div className={classes.root}>\n        <CssBaseline />\n        <Container maxWidth=\"sm\">\n          <div className={classes.header}>\n            <Button onClick={handleClose} color=\"secondary\">\n              취소\n            </Button>\n            <div />\n          </div>\n          <Divider />\n        </Container>\n      </div>\n      <RWView dialog />\n    </Dialog>\n  );\n};\n\nexport default React.memo(FullScreenDialog);\n","import React, {\n  useRef,\n  useCallback,\n  useMemo,\n  useState,\n  useEffect,\n} from \"react\";\nimport { List, WindowScroller } from \"react-virtualized\";\nimport useWindowDimensions from \"../../lib/windowDimensions\";\nimport clsx from \"clsx\";\nimport \"react-virtualized/styles.css\"; // only needs to be imported once\nimport { StepProvider } from \"./context/step\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nimport ReviewItem from \"./ReviewItem\";\nimport FullScreenDialog from \"./FullScreenDialog\";\nimport RWView from \"../common/RWView\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    [theme.breakpoints.up(\"sm\")]: {\n      marginTop: theme.spacing(1),\n    },\n  },\n}));\n\nconst Review = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const xSmall = useMediaQuery(theme.breakpoints.up(\"xs\"));\n  const small = useMediaQuery(theme.breakpoints.up(\"sm\"));\n  const bSmall = useMediaQuery(theme.breakpoints.between(400, \"sm\"));\n  const { width } = useWindowDimensions();\n  const [open, setOpen] = useState(false);\n  const paper = useRef(null);\n  const [pWidth, setpWidth] = useState(width);\n  const datas = useRef(\n    new Array(10).fill({\n      text: `Wish I could come, but I'm out of town this…주방 공사합니다.`,\n    })\n  );\n\n  const rowHeight = useMemo(() => {\n    if (small) {\n      return 800;\n    } else if (bSmall) {\n      return 650;\n    } else if (xSmall) {\n      return 600;\n    } else return 550;\n  }, [small, bSmall, xSmall]);\n\n  const rowRenderer = useCallback(\n    ({ index, key, style }) => {\n      const data = datas.current[index];\n\n      return <ReviewItem data={data} style={style} key={key} index={index} />;\n    },\n    [datas]\n  );\n  const handleClose = useCallback(() => {\n    setOpen(false);\n  }, []);\n  const handleClickOpen = useCallback(() => {\n    setOpen(true);\n  }, []);\n\n  // eslint-disable-next-line\n  useEffect(() => {\n    setpWidth(paper.current.getBoundingClientRect().width);\n  }, [pWidth]);\n\n  return (\n    <StepProvider datas={datas.current}>\n      <WindowScroller>\n        {({ height, isScrolling, registerChild, scrollTop }) => (\n          <div className={classes.paper} ref={paper}>\n            <RWView handleClickOpen={handleClickOpen} />\n            <div ref={registerChild}>\n              <List\n                autoHeight\n                height={height - 56 - 8 - clsx(small ? 0 : 37.09) - 8}\n                rowCount={datas.current.length}\n                rowHeight={rowHeight}\n                width={parseFloat(pWidth)}\n                rowRenderer={rowRenderer}\n                scrollTop={scrollTop}\n                isScrolling={isScrolling}\n              />\n            </div>\n          </div>\n        )}\n      </WindowScroller>\n      <FullScreenDialog open={open} handleClose={handleClose} />\n    </StepProvider>\n  );\n};\n\nexport default Review;\n","import React from \"react\";\n\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nimport Header from \"../../components/header\";\nimport Review from \"../../components/review\";\nimport SearchBar from \"../../components/common/SearchBar\";\n\nconst ReviewPage = () => {\n  const theme = useTheme();\n  const small = useMediaQuery(theme.breakpoints.up(\"sm\"));\n  return (\n    <>\n      <Header />\n      {!small && <SearchBar />}\n      <Review />\n    </>\n  );\n};\n\nexport default ReviewPage;\n"],"sourceRoot":""}