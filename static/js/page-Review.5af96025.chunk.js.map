{"version":3,"sources":["components/review/context/step.js","components/review/Feed/FeedMenu.jsx","components/review/Feed/CarouselImg/CarouselItem.js","components/review/Feed/CarouselImg/index.js","components/review/Feed/index.js","components/review/ReviewItem.jsx","components/review/FullScreenDialog/index.js","components/review/index.js","page/Review/index.js","lib/windowDimensions.js","components/common/RWView/Head.jsx","components/common/RWView/Tools.jsx","components/common/RWView/index.js"],"names":["StepContext","createContext","state","steps","actions","setSteps","StepProvider","children","datas","useState","map","value","action","Provider","Consumer","React","memo","handleClose","anchorEl","Menu","id","open","Boolean","onClose","MenuItem","onClick","style","color","src","alt","activeIndex","handleSelect","Carousel","indicators","interval","onSelect","carouselItem","item","Item","key","className","useStyles","makeStyles","theme","media","height","paddingTop","card","maxWidth","breakpoints","values","sm","subHeader","fontFamily","stepper","flexGrow","backgroundColor","justifyContent","marginBottom","spacing","content","padding","data","index","classes","setAnchorEl","useContext","activeStep","setActiveStep","handleClick","useCallback","e","currentTarget","selectedIndex","step","i","Card","CardHeader","avatar","Avatar","aria-label","IconButton","aria-haspopup","title","subheader","subheaderTypographyProps","variant","CardMedia","component","CarouselImg","CardContent","root","MobileStepper","position","Typography","text","useTheme","matches","useMediaQuery","up","ListItem","CssBaseline","Container","disableGutters","header","display","flexDirection","Transition","forwardRef","props","ref","Slide","direction","Dialog","fullScreen","TransitionComponent","Button","Divider","RWView","paper","marginTop","Review","xSmall","small","bSmall","between","width","useWindowDimensions","setOpen","useRef","pWidth","setpWidth","Array","fill","rowHeight","useMemo","rowRenderer","current","handleClickOpen","useEffect","getBoundingClientRect","window","scrollTo","parsedUrl","url","parse","location","href","query","querystring","Object","keys","length","constructor","top","parseInt","isScrolling","registerChild","scrollTop","rOnly","autoHeight","clsx","rowCount","parseFloat","overscanRowCount","ReviewPage","SearchBar","getWindowDimensions","innerWidth","innerHeight","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","inline","multiline","margin","Head","ListItemText","primary","secondary","box","leftIcons","Tools","List","size","background","border","borderRadius","textArea","fontSize","TextareaAutosize","rowsMin","rowsMax","readOnly","defaultValue","autoFocus"],"mappings":"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","file":"static/js/page-Review.5af96025.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\n\nconst StepContext = createContext({\n  state: { steps: [] },\n  actions: {\n    setSteps: () => {},\n  },\n});\n\nconst StepProvider = ({ children, datas }) => {\n  const [steps, setSteps] = useState(datas.map(() => 0));\n\n  //여기서는 useRef 쓰면 안 된다...\n  const value = {\n    state: { steps },\n    action: { setSteps },\n  };\n\n  return <StepContext.Provider value={value}>{children}</StepContext.Provider>;\n};\n\nconst { Consumer: StepConsumer } = StepContext;\n\nexport { StepProvider, StepConsumer };\n\nexport default StepContext;\n","import React from \"react\";\n\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst FeedMenu=({handleClose, anchorEl})=>{\n    return (\n        <Menu\n        id=\"feed-menu\"\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleClose}>수정</MenuItem>\n        <MenuItem onClick={handleClose} style={{color:'#C70039'}}>삭제</MenuItem>\n      </Menu>\n    )\n};\n\nexport default React.memo(FeedMenu);","export default [\n  {\n    id: \"0\",\n    src: \"images/menu/1.jpg\",\n    alt: \"칼국수\",\n  },\n  {\n    id: \"1\",\n    src: \"images/menu/2.jpg\",\n    alt: \"전복보쌈\",\n  },\n  {\n    id: \"2\",\n    src: \"images/menu/3.jpg\",\n    alt: \"보쌈정식\",\n  },\n];\n","import React from \"react\";\n\nimport Carousel from \"react-bootstrap/Carousel\";\n\nimport carouselItem from \"./CarouselItem\";\n\nconst CarouselImg = ({ activeIndex, handleSelect }) => {\n  return (\n    <Carousel\n      indicators={false}\n      interval={20000}\n      activeIndex={activeIndex}\n      onSelect={handleSelect}\n    >\n      {carouselItem.map((item) => (\n        <Carousel.Item key={item.id}>\n          <img className=\"d-block w-100\" src={item.src} alt={item.alt} />\n        </Carousel.Item>\n      ))}\n    </Carousel>\n  );\n};\n\nexport default React.memo(CarouselImg);\n","import React, { useState, useCallback, useContext } from \"react\";\nimport StepContext from \"../context/step\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport MobileStepper from \"@material-ui/core/MobileStepper\";\n\nimport FeedMenu from \"./FeedMenu\";\nimport CarouselImg from \"./CarouselImg\";\n\nconst useStyles = makeStyles((theme) => ({\n  media: {\n    height: 0,\n    paddingTop: \"100%\", // 1:1\n  },\n  card: {\n    maxWidth: theme.breakpoints.values.sm,\n  },\n  subHeader: {\n    fontFamily: \"Roboto\",\n  },\n  stepper: {\n    flexGrow: 1,\n    backgroundColor: \"#fff\",\n    justifyContent: \"center\",\n    marginBottom: theme.spacing(1),\n  },\n  content: {\n    padding: theme.spacing(0.5, 1),\n    height: \"10rem\",\n  },\n}));\n\nconst Feed = ({ data, index }) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const { state, action } = useContext(StepContext);\n  const [activeStep, setActiveStep] = useState(state.steps[index]);\n\n  const handleClick = useCallback((e) => {\n    setAnchorEl(e.currentTarget);\n  }, []);\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n  }, []);\n  const handleSelect = useCallback(\n    (selectedIndex, e) => {\n      setActiveStep(selectedIndex);\n      action.setSteps((steps) =>\n        steps.map((step, i) => (i === index ? (step = selectedIndex) : step))\n      );\n    },\n    [index, action]\n  );\n\n  return (\n    <>\n      <Card className={classes.card}>\n        <CardHeader\n          avatar={<Avatar aria-label=\"avatar\" />}\n          action={\n            <IconButton\n              aria-label=\"more\"\n              aria-haspopup=\"true\"\n              onClick={handleClick}\n            >\n              <MoreVertIcon />\n            </IconButton>\n          }\n          title=\"맨유경비원\"\n          subheader=\"20/09/29\"\n          subheaderTypographyProps={{\n            variant: \"caption\",\n            className: classes.subHeader,\n          }}\n        />\n        {/**CardMedia에 props를 줬더니 CarouselImg컴포넌트가 받더라... */}\n        <CardMedia\n          className={classes.media}\n          component={CarouselImg}\n          activeIndex={activeStep}\n          handleSelect={handleSelect}\n        />\n        <CardContent classes={{ root: classes.content }}>\n          <MobileStepper\n            variant=\"dots\"\n            steps={3}\n            position=\"static\"\n            activeStep={activeStep}\n            className={classes.stepper}\n          />\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {data.text}\n          </Typography>\n        </CardContent>\n      </Card>\n      <FeedMenu handleClose={handleClose} anchorEl={anchorEl} />\n    </>\n  );\n};\n\nexport default React.memo(Feed);\n","import React from \"react\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nimport Feed from \"./Feed\";\n\nconst ReviewItem = ({ data, style, index}) => {\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\n\n  return (\n    <>\n      <ListItem style={style}>\n        <CssBaseline />\n        <Container maxWidth=\"sm\" disableGutters={!matches}>\n          <Feed data={data} index={index}/>\n        </Container>\n      </ListItem>\n    </>\n  );\n};\n\nexport default React.memo(ReviewItem);\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Slide from \"@material-ui/core/Slide\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\n\nimport RWView from \"../../common/RWView\";\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    padding: theme.spacing(0.5),\n  },\n  root: {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst FullScreenDialog = ({ open, handleClose }) => {\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      fullScreen\n      open={open}\n      onClose={handleClose}\n      TransitionComponent={Transition}\n    >\n      <div className={classes.root}>\n        <CssBaseline />\n        <Container maxWidth=\"sm\">\n          <div className={classes.header}>\n            <Button onClick={handleClose} color=\"secondary\">\n              취소\n            </Button>\n            <div />\n          </div>\n          <Divider />\n        </Container>\n      </div>\n      <RWView />\n    </Dialog>\n  );\n};\n\nexport default React.memo(FullScreenDialog);\n","import React, {\n  useRef,\n  useCallback,\n  useMemo,\n  useState,\n  useEffect,\n} from \"react\";\nimport { List, WindowScroller } from \"react-virtualized\";\nimport useWindowDimensions from \"../../lib/windowDimensions\";\nimport clsx from \"clsx\";\nimport \"react-virtualized/styles.css\"; // only needs to be imported once\nimport { StepProvider } from \"./context/step\";\nimport querystring from \"querystring\";\nimport url from \"url\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nimport ReviewItem from \"./ReviewItem\";\nimport FullScreenDialog from \"./FullScreenDialog\";\nimport RWView from \"../common/RWView\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    [theme.breakpoints.up(\"sm\")]: {\n      marginTop: theme.spacing(1),\n    },\n  },\n}));\n\nconst Review = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const xSmall = useMediaQuery(theme.breakpoints.up(\"xs\"));\n  const small = useMediaQuery(theme.breakpoints.up(\"sm\"));\n  const bSmall = useMediaQuery(theme.breakpoints.between(400, \"sm\"));\n  const { width } = useWindowDimensions();\n  const [open, setOpen] = useState(false);\n  const paper = useRef(null);\n  const [pWidth, setpWidth] = useState(width);\n  const datas = useRef(\n    new Array(10).fill({\n      text: `Wish I could come, but I'm out of town this…주방 공사합니다.`,\n    })\n  );\n\n  const rowHeight = useMemo(() => {\n    if (small) {\n      return 800;\n    } else if (bSmall) {\n      return 650;\n    } else if (xSmall) {\n      return 600;\n    } else return 550;\n  }, [small, bSmall, xSmall]);\n\n  const rowRenderer = useCallback(\n    ({ index, key, style }) => {\n      const data = datas.current[index];\n\n      return <ReviewItem data={data} style={style} key={key} index={index} />;\n    },\n    [datas]\n  );\n  const handleClose = useCallback(() => {\n    setOpen(false);\n  }, []);\n  const handleClickOpen = useCallback(() => {\n    setOpen(true);\n  }, []);\n\n  useEffect(() => {\n    setpWidth(paper.current.getBoundingClientRect().width);\n  }, [pWidth]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n\n    const parsedUrl = url.parse(window.location.href);\n    const query = querystring.parse(parsedUrl.query);\n    const empty =\n      Object.keys(query).length === 0 && query.constructor === Object;\n    if (!empty) {\n      window.scrollTo({\n        top: rowHeight * parseInt(query.id) + 181 + theme.spacing(4),\n      });\n    }\n  }, [theme, rowHeight]);\n\n  return (\n    <StepProvider datas={datas.current}>\n      <WindowScroller>\n        {({ height, isScrolling, registerChild, scrollTop }) => (\n          <div className={classes.paper} ref={paper}>\n            <RWView handleClickOpen={handleClickOpen} rOnly />\n            <div ref={registerChild}>\n              <List\n                autoHeight\n                height={height - 56 - 8 - clsx(small ? 0 : 37.09) - 8}\n                rowCount={datas.current.length}\n                rowHeight={rowHeight}\n                width={parseFloat(pWidth)}\n                rowRenderer={rowRenderer}\n                scrollTop={scrollTop}\n                isScrolling={isScrolling}\n                overscanRowCount={4}\n              />\n            </div>\n          </div>\n        )}\n      </WindowScroller>\n      <FullScreenDialog open={open} handleClose={handleClose} />\n    </StepProvider>\n  );\n};\n\nexport default Review;\n","import React from \"react\";\n\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nimport Header from \"../../components/header\";\nimport Review from \"../../components/review\";\nimport SearchBar from \"../../components/common/SearchBar\";\n\nconst ReviewPage = () => {\n  const theme = useTheme();\n  const small = useMediaQuery(theme.breakpoints.up(\"sm\"));\n  return (\n    <>\n      <Header />\n      {!small && <SearchBar />}\n      <Review />\n    </>\n  );\n};\n\nexport default ReviewPage;\n","import { useState, useEffect } from \"react\";\n\nconst getWindowDimensions = () => {\n  const { innerWidth: width, innerHeight: height } = window;\n\n  return {\n    width,\n    height,\n  };\n};\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    //뒷정리\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import React from 'react';\n\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    inline: {\n      display: \"inline\",\n      fontFamily: \"Roboto\",\n    },\n    multiline: {\n      margin: theme.spacing(1.5, 0),\n    },\n  }));\n\nconst Head=()=>{\n    const classes = useStyles();\n\n    return(\n        <Container maxWidth=\"sm\">\n          <ListItemText\n            primary=\"공지사항 제목\"\n            secondary={\n              <Typography\n                component=\"span\"\n                variant=\"caption\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                20/10/18\n              </Typography>\n            }\n            classes={{ multiline: classes.multiline }}\n          />\n          <Divider />\n        </Container>\n      )\n}\n\nexport default Head;","import React from 'react';\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport CameraAltIcon from \"@material-ui/icons/CameraAlt\";\nimport PhotoAlbumIcon from \"@material-ui/icons/PhotoAlbum\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles((theme) => ({\n    box: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      padding: theme.spacing(0),\n      justifyContent: \"space-between\",\n    },\n    leftIcons: {\n      display: \"flex\",\n      flexDirection: \"row\",\n    },\n  }));\n\nconst Tools=()=>{\n    const classes=useStyles();\n\n    return(\n        <>\n            <Divider variant=\"middle\" />\n            <List className={classes.box}>\n                <div className={classes.leftIcons}>\n                  <ListItem>\n                    <IconButton size=\"small\">\n                      <CameraAltIcon color=\"action\" />\n                    </IconButton>\n                  </ListItem>\n                  <ListItem>\n                    <IconButton size=\"small\">\n                      <PhotoAlbumIcon color=\"action\" />\n                    </IconButton>\n                  </ListItem>\n                </div>\n                <div>\n                  <ListItem>\n                    <IconButton size=\"small\">\n                      <CreateIcon color=\"action\" />\n                    </IconButton>\n                  </ListItem>\n                </div>\n            </List>\n        </>\n    );\n};\n\nexport default Tools;","import React from \"react\";\nimport clsx from \"clsx\";\nimport useWindowDimensions from \"../../../lib/windowDimensions\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nimport Head from \"./Head\";\nimport Tools from \"./Tools\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(1, 0),\n    width: \"100%\",\n  },\n  background: {\n    backgroundColor: \"white\",\n    border: \"thin solid #dcdcdc\",\n    borderRadius: \"2px\",\n    width: \"100%\",\n  },\n  textArea: {\n    width: \"100%\",\n    border: \"none\",\n    fontSize: \"1rem\",\n    fontFamily: \"MaplestoryOTFBold\",\n    backgroundColor: \"white\",\n    padding: theme.spacing(2),\n  },\n}));\n\nconst RWView = ({ handleClickOpen, rOnly, data }) => {\n  const classes = useStyles();\n  const { height } = useWindowDimensions();\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Container\n        maxWidth=\"sm\"\n        {...(data\n          ? {\n              style: {\n                height:\n                  height - 56 - 8 - 57.43 - parseInt(clsx(matches ? 8 : \"0\")),\n              },\n            }\n          : {})}\n      >\n        <div className={classes.background}>\n          {data && <Head />}\n          <TextareaAutosize\n            aria-label=\"read-write-data\"\n            rowsMin={clsx(data ? 16 : 4)}\n            rowsMax={clsx(data ? 16 : !rOnly ? 10 : 4)}\n            className={classes.textArea}\n            onClick={handleClickOpen}\n            readOnly={rOnly}\n            defaultValue={data}\n            {...(data\n              ? {\n                  style: {\n                    fontFamily: \"Roboto\",\n                  },\n                }\n              : {})}\n            autoFocus={!data && !rOnly}\n          />\n          {!data && <Tools />}\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default React.memo(RWView);\n"],"sourceRoot":""}