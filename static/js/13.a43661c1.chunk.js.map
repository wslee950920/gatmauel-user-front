{"version":3,"sources":["lib/windowDimensions.js","components/review/Feed/index.js","components/review/ReviewItem.jsx","components/review/index.js","page/Review/index.js"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useStyles","makeStyles","theme","media","paddingTop","breakpoints","up","cart","marginLeft","textField","React","memo","handleClose","classes","num","setNum","addOnClick","useCallback","prevNum","removeOnClick","onChange","e","newValue","target","value","replace","ck","useMemo","checkRange","Card","CardHeader","action","IconButton","aria-label","onClick","title","subheader","CardMedia","className","image","CardContent","Typography","variant","color","component","CardActions","disableSpacing","TextField","size","inputProps","maxLength","style","textAlign","fontFamily","error","data","ListItem","alignItems","Feed","root","display","paper","marginTop","spacing","flexDirection","Review","useTheme","matches","useMediaQuery","useRef","Array","fill","text","to","Row","index","d","Container","maxWidth","CssBaseline","itemCount","current","length","itemSize","clsx","values","sm","itemData","ReviewPage","main"],"mappings":"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","file":"static/js/13.a43661c1.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst getWindowDimensions = () => {\n  const { innerWidth: width, innerHeight: height } = window;\n\n  return {\n    width,\n    height,\n  };\n};\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import React, { useState, useCallback, useMemo } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst checkRange = (num) => {\n  if (num > 10 || num < 1) return true;\n  else return false;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  media: {\n    height: 0,\n    paddingTop: \"100%\", // 1:1\n    width: 250,\n\n    [theme.breakpoints.up(\"xs\")]: {\n      width: 300,\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 400,\n    },\n  },\n  cart: {\n    marginLeft: \"auto\",\n  },\n  textField: {\n    width: \"1.5rem\",\n  },\n}));\n\nconst MenuCard = ({ handleClose }) => {\n  const classes = useStyles();\n  const [num, setNum] = useState(1);\n\n  const addOnClick = useCallback(() => {\n    setNum((prevNum) => {\n      if (prevNum < 10 && prevNum >= 1) return prevNum + 1;\n      else if (prevNum < 1) return 1;\n      else return 10;\n    });\n  }, []);\n  const removeOnClick = useCallback(() => {\n    setNum((prevNum) => {\n      if (prevNum > 1 && prevNum <= 10) return prevNum - 1;\n      else if (prevNum > 10) return 10;\n      else return 1;\n    });\n  }, []);\n  const onChange = useCallback((e) => {\n    const curValue = e.target.value;\n    const newValue = curValue.replace(/[^0-9]/g, \"\");\n\n    setNum(newValue);\n  }, []);\n  const ck = useMemo(() => checkRange(num), [num]);\n\n  return (\n    <Card>\n      <CardHeader\n        action={\n          <IconButton aria-label=\"close\" onClick={handleClose}>\n            <CloseIcon />\n          </IconButton>\n        }\n        title=\"칼국수\"\n        subheader=\"7000원\"\n      />\n      <CardMedia className={classes.media} image=\"images/menu/1.jpg\" />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          칼국수 + 겉절이 + 고추다데기\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"remove\" onClick={removeOnClick}>\n          <RemoveIcon />\n        </IconButton>\n        <TextField\n          size=\"small\"\n          className={classes.textField}\n          inputProps={{\n            maxLength: 2,\n            style: { textAlign: \"center\", fontFamily: \"Roboto\" },\n          }}\n          value={num}\n          onChange={onChange}\n          error={ck}\n        />\n        <IconButton aria-label=\"add\" onClick={addOnClick}>\n          <AddIcon />\n        </IconButton>\n        <IconButton\n          className={classes.cart}\n          aria-label=\"cart\"\n          onClick={handleClose}\n        >\n          <AddShoppingCartIcon />\n        </IconButton>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default React.memo(MenuCard);\n","import React from \"react\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\n\nimport Feed from \"./Feed\";\n\nconst ReviewItem = ({ data, style }) => {\n  return (\n    <div style={style}>\n      <ListItem alignItems=\"center\">\n        <Feed />\n      </ListItem>\n    </div>\n  );\n};\n\nexport default React.memo(ReviewItem);\n","import React, { useRef, useCallback } from \"react\";\nimport { FixedSizeList as List } from \"react-window\";\nimport useWindowDimensions from \"../../lib/windowDimensions\";\nimport clsx from \"clsx\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nimport Footer from \"../footer\";\nimport ReviewItem from \"./ReviewItem\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"&>li:last-child\": {\n      display: \"none\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n}));\n\nconst Review = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\n  const { height, width } = useWindowDimensions();\n  const data = useRef(\n    new Array(1000).fill({\n      text: `Wish I could come, but I'm out of town this…주방 공사합니다.`,\n      to: \"#\",\n    })\n  );\n\n  const Row = useCallback(({ index, style, data }) => {\n    const d = data[index];\n\n    return <ReviewItem data={d} style={style} />;\n  }, []);\n\n  return (\n    <>\n      <Container component=\"main\" maxWidth=\"sm\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <List\n            className={classes.root}\n            height={height - 56 - 8 - 57.43}\n            itemCount={data.current.length}\n            itemSize={500}\n            width={clsx(matches ? theme.breakpoints.values.sm : width)}\n            itemData={data.current}\n          >\n            {Row}\n          </List>\n        </div>\n      </Container>\n      <Footer />\n    </>\n  );\n};\n\nexport default Review;\n","import React from \"react\";\n\nimport Header from \"../../components/header\";\nimport Review from \"../../components/review\";\n\nconst ReviewPage = () => {\n  return (\n    <>\n      <Header main />\n      <Review />\n    </>\n  );\n};\n\nexport default ReviewPage;\n"],"sourceRoot":""}