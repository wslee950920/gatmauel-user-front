{"version":3,"sources":["lib/windowDimensions.js","components/common/RWView/Head.jsx","components/common/RWView/Tools.jsx","components/common/RWView/index.js","lib/usePlatform.js","components/notice/NoticeLitemLink.jsx","components/notice/index.js","components/notice/ReadNotice/index.js","page/Notice/index.js"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useStyles","makeStyles","theme","inline","display","fontFamily","multiline","margin","spacing","Head","classes","Container","maxWidth","ListItemText","primary","secondary","Typography","component","variant","className","color","Divider","box","flexDirection","padding","justifyContent","leftIcons","Tools","List","ListItem","IconButton","size","root","background","backgroundColor","border","borderRadius","textArea","fontSize","React","memo","handleClickOpen","rOnly","data","useTheme","matches","useMediaQuery","breakpoints","up","CssBaseline","style","parseInt","clsx","TextareaAutosize","aria-label","rowsMin","rowsMax","onClick","readOnly","defaultValue","autoFocus","usePlatform","filter","useRef","useMemo","navigator","platform","current","indexOf","toLowerCase","content","index","length","renderLink","forwardRef","itemProps","ref","to","divider","button","text","secondaryTypographyProps","noWrap","marginTop","Notice","datas","Array","fill","Row","useCallback","itemCount","itemSize","itemData","ReadNotice","RWView","view","match","exact","path","url","SearchBar"],"mappings":"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","file":"static/js/10.13c87119.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst getWindowDimensions = () => {\n  const { innerWidth: width, innerHeight: height } = window;\n\n  return {\n    width,\n    height,\n  };\n};\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    //뒷정리\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import React from 'react';\n\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    inline: {\n      display: \"inline\",\n      fontFamily: \"Roboto\",\n    },\n    multiline: {\n      margin: theme.spacing(1.5, 0),\n    },\n  }));\n\nconst Head=()=>{\n    const classes = useStyles();\n\n    return(\n        <Container maxWidth=\"sm\">\n          <ListItemText\n            primary=\"공지사항 제목\"\n            secondary={\n              <Typography\n                component=\"span\"\n                variant=\"caption\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                20/10/18\n              </Typography>\n            }\n            classes={{ multiline: classes.multiline }}\n          />\n          <Divider />\n        </Container>\n      )\n}\n\nexport default Head;","import React from 'react';\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport CameraAltIcon from \"@material-ui/icons/CameraAlt\";\nimport PhotoAlbumIcon from \"@material-ui/icons/PhotoAlbum\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst useStyles = makeStyles((theme) => ({\n    box: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      padding: theme.spacing(0),\n      justifyContent: \"space-between\",\n    },\n    leftIcons: {\n      display: \"flex\",\n      flexDirection: \"row\",\n    },\n  }));\n\nconst Tools=()=>{\n    const classes=useStyles();\n\n    return(\n        <>\n            <Divider variant=\"middle\" />\n            <List className={classes.box}>\n                <div className={classes.leftIcons}>\n                  <ListItem>\n                    <IconButton size=\"small\">\n                      <CameraAltIcon color=\"action\" />\n                    </IconButton>\n                  </ListItem>\n                  <ListItem>\n                    <IconButton size=\"small\">\n                      <PhotoAlbumIcon color=\"action\" />\n                    </IconButton>\n                  </ListItem>\n                </div>\n                <div>\n                  <ListItem>\n                    <IconButton size=\"small\">\n                      <CreateIcon color=\"action\" />\n                    </IconButton>\n                  </ListItem>\n                </div>\n            </List>\n        </>\n    );\n};\n\nexport default Tools;","import React from \"react\";\nimport clsx from \"clsx\";\nimport useWindowDimensions from \"../../../lib/windowDimensions\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nimport Head from \"./Head\";\nimport Tools from \"./Tools\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(1, 0),\n    width: \"100%\",\n  },\n  background: {\n    backgroundColor: \"white\",\n    border: \"thin solid #dcdcdc\",\n    borderRadius: \"2px\",\n    width: \"100%\",\n  },\n  textArea: {\n    width: \"100%\",\n    border: \"none\",\n    fontSize: \"1rem\",\n    fontFamily: \"MaplestoryOTFBold\",\n    backgroundColor: \"white\",\n    padding: theme.spacing(2),\n  },\n}));\n\nconst RWView = ({ handleClickOpen, rOnly, data }) => {\n  const classes = useStyles();\n  const { height } = useWindowDimensions();\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Container\n        maxWidth=\"sm\"\n        {...(data\n          ? {\n              style: {\n                height:\n                  height - 56 - 8 - 57.43 - parseInt(clsx(matches ? 8 : \"0\")),\n              },\n            }\n          : {})}\n      >\n        <div className={classes.background}>\n          {data && <Head />}\n          <TextareaAutosize\n            aria-label=\"read-write-data\"\n            rowsMin={clsx(data ? 16 : 4)}\n            rowsMax={clsx(data ? 16 : !rOnly ? 10 : 4)}\n            className={classes.textArea}\n            onClick={handleClickOpen}\n            readOnly={rOnly}\n            defaultValue={data}\n            {...(data\n              ? {\n                  style: {\n                    fontFamily: \"Roboto\",\n                  },\n                }\n              : {})}\n            autoFocus={!data && !rOnly}\n          />\n          {!data && <Tools />}\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default React.memo(RWView);\n","import { useMemo, useRef } from \"react\";\n\nconst usePlatform = () => {\n  const filter = useRef(\"win16|win32|win64|macintel|mac|\");\n\n  const platform = useMemo(() => {\n    return (\n      navigator.platform &&\n      filter.current.indexOf(navigator.platform.toLowerCase()) < 0\n    );\n  }, []);\n\n  return platform;\n};\n\nexport default usePlatform;\n","import React, { useMemo } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst useStyles = makeStyles((theme) => ({\n  inline: {\n    display: \"inline\",\n    fontFamily: \"Roboto\",\n  },\n  content: {\n    fontFamily: \"MaplestoryOTFBold\",\n  },\n}));\n\nconst NoticeLitemLink = ({ data, style, index, length }) => {\n  const classes = useStyles();\n\n  const renderLink = useMemo(\n    () =>\n      React.forwardRef((itemProps, ref) => (\n        <RouterLink to={data.to} ref={ref} {...itemProps} />\n      )),\n    [data.to]\n  );\n  const divider = useMemo(() => {\n    if (index !== length - 1) return true;\n    else return false;\n  }, [index, length]);\n\n  return (\n    <div style={style}>\n      <CssBaseline />\n      <Container maxWidth=\"sm\">\n        <ListItem divider={divider} button component={renderLink}>\n          <ListItemText\n            primary=\"공지사항 제목\"\n            secondary={\n              <>\n                <Typography\n                  component=\"span\"\n                  variant=\"caption\"\n                  className={classes.inline}\n                  color=\"textPrimary\"\n                >\n                  20/09/27\n                </Typography>\n                <br />\n                {data.text}\n              </>\n            }\n            secondaryTypographyProps={{\n              variant: \"body2\",\n              className: classes.content,\n              noWrap: true,\n            }}\n          />\n        </ListItem>\n      </Container>\n    </div>\n  );\n};\n\nexport default React.memo(NoticeLitemLink);\n","import React, { useRef, useCallback } from \"react\";\nimport { FixedSizeList as List } from \"react-window\";\nimport useWindowDimensions from \"../../lib/windowDimensions\";\nimport clsx from \"clsx\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nimport NoticeLitemLink from \"./NoticeLitemLink\";\nimport Footer from \"../footer\";\n\nimport usePlatform from \"../../lib/usePlatform\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    [theme.breakpoints.up(\"sm\")]: {\n      marginTop: theme.spacing(1),\n    },\n  },\n}));\n\nconst Notice = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\n  const { height, width } = useWindowDimensions();\n  const datas = useRef(\n    new Array(20).fill({\n      text: `Wish I could come, but I'm out of town this…주방 공사합니다.`,\n      to: \"/notice/1\",\n    })\n  );\n  const platform = usePlatform();\n\n  //https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\n  //새로운 변수 이름으로 할당하기(data->datas)\n  const Row = useCallback(({ index, style, data: datas }) => {\n    const data = datas[index];\n\n    return (\n      <NoticeLitemLink\n        data={data}\n        style={style}\n        index={index}\n        length={datas.length}\n      />\n    );\n  }, []);\n\n  return (\n    <>\n      <List\n        className={classes.root}\n        height={\n          height -\n          56 -\n          8 -\n          clsx(matches ? 0 : 37.09) -\n          8 -\n          clsx(platform ? 0 : 57.43)\n        }\n        itemCount={datas.current.length}\n        itemSize={100}\n        width={width}\n        itemData={datas.current}\n      >\n        {Row}\n      </List>\n      {platform ? null : <Footer />}\n    </>\n  );\n};\n\nexport default Notice;\n","import React, { useRef } from \"react\";\n\nimport RWView from \"../../common/RWView\";\nimport Footer from \"../../../components/footer\";\n\nconst ReadNotice = () => {\n  const data = useRef(\n    `Wish I could come, but I'm out of town this…주방 공사합니다.`\n  );\n\n  return (\n    <>\n      <RWView view rOnly data={data.current} />\n      <Footer />\n    </>\n  );\n};\n\nexport default ReadNotice;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nimport Header from \"../../components/header\";\nimport Notice from \"../../components/notice\";\nimport SearchBar from \"../../components/common/SearchBar\";\nimport ReadNotice from \"../../components/notice/ReadNotice\";\n\nconst NoticePage = ({ match }) => {\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\n\n  return (\n    <>\n      <Header />\n      {!matches && <Route exact path={match.url} component={SearchBar} />}\n      <Route exact path={match.url} component={Notice} />\n      <Route path={`${match.url}/:id`} component={ReadNotice} />\n    </>\n  );\n};\n\nexport default React.memo(NoticePage);\n"],"sourceRoot":""}