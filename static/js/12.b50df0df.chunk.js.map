{"version":3,"sources":["lib/windowDimensions.js","components/notice/NoticeLitemLink.jsx","components/notice/index.js","page/Notice/index.js"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useStyles","makeStyles","theme","inline","display","fontFamily","content","React","memo","data","style","classes","renderLink","useMemo","forwardRef","itemProps","ref","to","ListItem","alignItems","divider","button","component","ListItemText","primary","secondary","Typography","variant","className","color","text","secondaryTypographyProps","noWrap","root","paper","marginTop","spacing","flexDirection","Notice","useTheme","matches","useMediaQuery","breakpoints","up","datas","useRef","Array","fill","Row","useCallback","index","d","SearchBar","Container","maxWidth","CssBaseline","clsx","itemCount","current","length","itemSize","values","sm","itemData","NoticePage"],"mappings":"sKAEMA,EAAsB,WAAO,IAAD,EACmBC,OAEnD,MAAO,CACLC,MAJ8B,EACxBC,WAINC,OAL8B,EACLC,cAQd,SAASC,IAAuB,IAAD,EACIC,mBAC9CP,KAF0C,mBACrCQ,EADqC,KACnBC,EADmB,KAc5C,OATAC,qBAAU,WACR,SAASC,IACPF,EAAoBT,KAItB,OADAC,OAAOW,iBAAiB,SAAUD,GAC3B,kBAAMV,OAAOY,oBAAoB,SAAUF,MACjD,IAEIH,I,0LCjBHM,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNC,QAAS,SACTC,WAAY,UAEdC,QAAS,CACPD,WAAY,yBA6CDE,MAAMC,MAzCG,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACzBC,EAAUX,IAEVY,EAAaC,mBACjB,kBACEN,IAAMO,YAAW,SAACC,EAAWC,GAAZ,OACf,kBAAC,IAAD,eAAYC,GAAIR,EAAKQ,GAAID,IAAKA,GAASD,SAE3C,CAACN,EAAKQ,KAGR,OACE,yBAAKP,MAAOA,GACV,kBAACQ,EAAA,EAAD,CAAUC,WAAW,aAAaC,SAAO,EAACC,QAAM,EAACC,UAAWV,GAC1D,kBAACW,EAAA,EAAD,CACEC,QAAQ,wCACRC,UACE,oCACE,kBAACC,EAAA,EAAD,CACEJ,UAAU,OACVK,QAAQ,UACRC,UAAWjB,EAAQR,OACnB0B,MAAM,eAJR,YAQA,6BACCpB,EAAKqB,MAGVC,yBAA0B,CACxBJ,QAAS,QACTC,UAAWjB,EAAQL,QACnB0B,QAAQ,UCrCdhC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,CACJ7C,MAAO,OACP,kBAAmB,CACjBgB,QAAS,SAGb8B,MAAO,CACLC,UAAWjC,EAAMkC,QAAQ,GACzBhC,QAAS,OACTiC,cAAe,SACflB,WAAY,cA6CDmB,EAzCA,WACb,IAAM3B,EAAUX,IACVE,EAAQqC,cACRC,EAAUC,YAAcvC,EAAMwC,YAAYC,GAAG,OAHhC,EAIOnD,cAAlBF,EAJW,EAIXA,OAAQF,EAJG,EAIHA,MACVwD,EAAQC,iBACZ,IAAIC,MAAM,KAAMC,KAAK,CACnBjB,KAAK,gGACLb,GAAI,OAIF+B,EAAMC,uBAAY,YAA6B,IAA1BC,EAAyB,EAAzBA,MAAOxC,EAAkB,EAAlBA,MAC1ByC,EAD4C,EAAX1C,KACxByC,GAEf,OAAO,kBAAC,EAAD,CAAiBzC,KAAM0C,EAAGzC,MAAOA,MACvC,IAEH,OACE,qCACI8B,GAAW,kBAACY,EAAA,EAAD,MACb,kBAACC,EAAA,EAAD,CAAW/B,UAAU,OAAOgC,SAAS,MACnC,kBAACC,EAAA,EAAD,MACA,yBAAK3B,UAAWjB,EAAQuB,OACtB,kBAAC,IAAD,CACEN,UAAWjB,EAAQsB,KACnB3C,OAAQA,EAAS,GAAK,EAAIkE,YAAKhB,EAAU,EAAI,OAAS,EAAI,MAC1DiB,UAAWb,EAAMc,QAAQC,OACzBC,SAAU,IACVxE,MAAOoE,YAAKhB,EAAUtC,EAAMwC,YAAYmB,OAAOC,GAAK1E,GACpD2E,SAAUnB,EAAMc,SAEfV,KAIP,kBAAC,IAAD,QCnDSgB,UATI,WACjB,OACE,oCACE,kBAAC,IAAD,MACA,kBAAC,EAAD","file":"static/js/12.b50df0df.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst getWindowDimensions = () => {\n  const { innerWidth: width, innerHeight: height } = window;\n\n  return {\n    width,\n    height,\n  };\n};\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import React, { useMemo } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  inline: {\n    display: \"inline\",\n    fontFamily: \"Roboto\",\n  },\n  content: {\n    fontFamily: \"MaplestoryOTFBold\",\n  },\n}));\n\nconst NoticeLitemLink = ({ data, style }) => {\n  const classes = useStyles();\n\n  const renderLink = useMemo(\n    () =>\n      React.forwardRef((itemProps, ref) => (\n        <RouterLink to={data.to} ref={ref} {...itemProps} />\n      )),\n    [data.to]\n  );\n\n  return (\n    <div style={style}>\n      <ListItem alignItems=\"flex-start\" divider button component={renderLink}>\n        <ListItemText\n          primary=\"공지사항 제목\"\n          secondary={\n            <>\n              <Typography\n                component=\"span\"\n                variant=\"caption\"\n                className={classes.inline}\n                color=\"textPrimary\"\n              >\n                20/09/27\n              </Typography>\n              <br />\n              {data.text}\n            </>\n          }\n          secondaryTypographyProps={{\n            variant: \"body2\",\n            className: classes.content,\n            noWrap: true,\n          }}\n        />\n      </ListItem>\n    </div>\n  );\n};\n\nexport default React.memo(NoticeLitemLink);\n","import React, { useRef, useCallback } from \"react\";\nimport { FixedSizeList as List } from \"react-window\";\nimport useWindowDimensions from \"../../lib/windowDimensions\";\nimport clsx from \"clsx\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nimport SearchBar from \"../common/SearchBar\";\nimport Footer from \"../footer\";\nimport NoticeLitemLink from \"./NoticeLitemLink\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"&>li:last-child\": {\n      display: \"none\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n}));\n\nconst Notice = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\n  const { height, width } = useWindowDimensions();\n  const datas = useRef(\n    new Array(1000).fill({\n      text: `Wish I could come, but I'm out of town this…주방 공사합니다.`,\n      to: \"#\",\n    })\n  );\n\n  const Row = useCallback(({ index, style, data }) => {\n    const d = data[index];\n\n    return <NoticeLitemLink data={d} style={style} />;\n  }, []);\n\n  return (\n    <>\n      {!matches && <SearchBar />}\n      <Container component=\"main\" maxWidth=\"sm\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <List\n            className={classes.root}\n            height={height - 56 - 8 - clsx(matches ? 0 : 37.09) - 8 - 57.43}\n            itemCount={datas.current.length}\n            itemSize={100}\n            width={clsx(matches ? theme.breakpoints.values.sm : width)}\n            itemData={datas.current}\n          >\n            {Row}\n          </List>\n        </div>\n      </Container>\n      <Footer />\n    </>\n  );\n};\n\nexport default Notice;\n","import React from \"react\";\n\nimport Header from \"../../components/header\";\nimport Notice from \"../../components/notice\";\n\nconst NoticePage = () => {\n  return (\n    <>\n      <Header />\n      <Notice />\n    </>\n  );\n};\n\nexport default NoticePage;\n"],"sourceRoot":""}