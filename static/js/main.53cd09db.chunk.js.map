{"version":3,"sources":["components/header/Drawer/index.js","components/header/Drawer/DrawerList/ListItemLink.jsx","components/header/Drawer/DrawerList/SelectIcon.js","components/header/Drawer/DrawerList/DrawerMenu.js","components/header/Drawer/DrawerList/index.js","components/main/CarouselView/CarouselItem.js","components/main/CarouselView/index.js","components/common/MainLists/ListItemLink.jsx","components/main/ReviewList/index.js","components/main/CarouselMenu/TileData.js","components/main/CarouselMenu/index.js","components/common/MenuCard/index.js","components/main/CardDialog/index.js","components/main/NoticeList/index.js","components/main/index.js","page/Main/index.js","App.jsx","serviceWorker.js","index.js","components/header/AccountMenu/index.js","components/header/index.js","components/common/SearchBar.jsx","components/footer/index.js"],"names":["React","memo","open","toggleDrawer","iOS","process","browser","test","navigator","userAgent","onClose","onOpen","disableBackdropTransition","disableDiscovery","ModalProps","keepMounted","useStyles","makeStyles","primary","textDecorationLine","icon","to","classes","renderLink","useMemo","forwardRef","itemProps","ref","ListItem","button","component","ListItemIcon","ListItemText","clsx","primaryTypographyProps","color","selectIcon","text","list","width","className","role","onClick","onKeyDown","List","aria-label","menus","map","menu","key","id","src","alt","CarouselView","activeItem","length","showControls","showIndicators","carouselItem","item","itemId","fontMaple","fontFamily","fontRobo","secondary","review","secondaryTypographyProps","noWrap","theme","root","breakpoints","up","flex","background","backgroundColor","border","borderRadius","title","margin","spacing","content","fontSize","box","display","alignItems","write","marginRight","ReviewList","element","CssBaseline","style","padding","Container","Typography","variant","Link","RouterLink","value","cloneElement","img","flexWrap","justifyContent","overflow","palette","paper","gridList","transform","titleBar","tileRoot","imgFull","height","handleOpen","onMouseOver","useTheme","matches","useMediaQuery","maxWidth","GridList","cols","tileData","tile","GridListTile","imgFullHeight","imgFullWidth","hover","zoom","cursor","GridListTileBar","media","paddingTop","cart","marginLeft","textField","handleClose","useState","num","setNum","addOnClick","useCallback","prevNum","removeOnClick","onChange","e","newValue","target","replace","ck","checkRange","Card","CardHeader","action","IconButton","subheader","CardMedia","image","CardContent","CardActions","disableSpacing","TextField","size","inputProps","maxLength","textAlign","error","Transition","props","Grow","Dialog","aria-labelledby","aria-describedby","TransitionComponent","TransitionProps","timeout","exit","transformOrigin","info","pink","dark","Notice","Main","setOpen","Grid","container","xs","md","NoticeList","MainPage","main","LoginPage","loadable","RegisterPage","ProfilePage","AccountPage","FindPage","NoticePage","ReviewPage","App","path","exact","render","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","createMuiTheme","typography","light","contrastText","values","sm","lg","xl","overrides","MuiCssBaseline","fontWeight","fontStyle","platform","indexOf","toLowerCase","alert","ReactDOM","basename","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","menuId","accountEl","isMenuOpen","handleMenuClose","anchorEl","anchorOrigin","vertical","horizontal","MenuItem","useClasses","grow","flexGrow","menuButton","section","appBar","base","setAccountEl","drawer","setDrawer","search","setSearch","handleSearch","prev","handleMenuOpen","event","currentTarget","type","AppBar","position","Toolbar","edge","ScopedCssBaseline","SearchBar","Badge","badgeContent","aria-controls","aria-haspopup","Drawer","marginTop","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","create","placeholder","input","onBlur","setTimeout","duration","shortest","autoFocus","bottom","footer","link","Footer"],"mappings":"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","file":"static/js/main.53cd09db.chunk.js","sourcesContent":["import React from \"react\";\n\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\n\nimport DrawerList from \"./DrawerList\";\n\nconst Drawer = ({ open, toggleDrawer }) => {\n  const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n\n  return (\n    <SwipeableDrawer\n      open={open}\n      onClose={toggleDrawer(false)}\n      onOpen={toggleDrawer(true)}\n      disableBackdropTransition={!iOS}\n      disableDiscovery={iOS}\n      ModalProps={{ keepMounted: true }}\n    >\n      <DrawerList toggleDrawer={toggleDrawer} />\n    </SwipeableDrawer>\n  );\n};\n\nexport default React.memo(Drawer);\n","import React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport clsx from \"clsx\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nconst useStyles = makeStyles({\n  primary: {\n    textDecorationLine: \"line-through\",\n  },\n});\n\nconst ListItemLink = ({ icon, primary, to }) => {\n  const classes = useStyles();\n\n  const renderLink = useMemo(\n    () =>\n      React.forwardRef((itemProps, ref) => (\n        <RouterLink to={to} ref={ref} {...itemProps} />\n      )),\n    [to]\n  );\n\n  return (\n    <li>\n      <ListItem button component={renderLink}>\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n        <ListItemText\n          primary={primary}\n          classes={{\n            primary: clsx({ [classes.primary]: primary === \"주문하기\" }),\n          }}\n          primaryTypographyProps={{\n            color: clsx(primary === \"주문하기\" ? \"textSecondary\" : \"inherit\"),\n          }}\n        />\n      </ListItem>\n    </li>\n  );\n};\n\nListItemLink.propTypes = {\n  icon: PropTypes.element,\n  primary: PropTypes.string.isRequired,\n  to: PropTypes.string.isRequired,\n};\n\nexport default React.memo(ListItemLink);\n","import React from \"react\";\n\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport RateReviewIcon from \"@material-ui/icons/RateReview\";\nimport LocalShippingIcon from \"@material-ui/icons/LocalShipping\";\nimport MapIcon from \"@material-ui/icons/Map\";\nimport RestaurantMenuIcon from \"@material-ui/icons/RestaurantMenu\";\nimport NotificationImportantIcon from \"@material-ui/icons/NotificationImportant\";\n\nconst selectIcon = (text) => {\n  if (text === \"홈\") {\n    return <HomeIcon />;\n  } else if (text === \"리뷰\") {\n    return <RateReviewIcon />;\n  } else if (text === \"주문하기\") {\n    return <LocalShippingIcon />;\n  } else if (text === \"오시는길\") {\n    return <MapIcon />;\n  } else if (text === \"메뉴\") {\n    return <RestaurantMenuIcon />;\n  } else if (text === \"공지사항\") {\n    return <NotificationImportantIcon />;\n  }\n};\n\nexport default selectIcon;\n","export default [\n  {\n    text: \"홈\",\n    to: \"/main\",\n  },\n  {\n    text: \"메뉴\",\n    to: \"#\",\n  },\n  {\n    text: \"리뷰\",\n    to: \"/review\",\n  },\n  {\n    text: \"공지사항\",\n    to: \"/notice\",\n  },\n  {\n    text: \"주문하기\",\n    to: \"#\",\n  },\n  {\n    text: \"오시는길\",\n    to: \"#\",\n  },\n];\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\n\nimport ListItemLink from \"./ListItemLink\";\nimport selectIcon from \"./SelectIcon\";\nimport menus from \"./DrawerMenu\";\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n});\n\nconst DrawerList = ({ toggleDrawer }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(false)}\n      onKeyDown={toggleDrawer(false)}\n    >\n      <List aria-label=\"home review order map\">\n        {menus.map((menu) => (\n          <ListItemLink\n            key={menu.text}\n            to={menu.to}\n            primary={menu.text}\n            icon={selectIcon(menu.text)}\n          />\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default React.memo(DrawerList);\n","export default [\n  {\n    id: \"1\",\n    src: \"images/view/1.jpg\",\n    alt: \"전경\",\n  },\n  {\n    id: \"2\",\n    src: \"images/view/2.jpg\",\n    alt: \"홀1\",\n  },\n  {\n    id: \"3\",\n    src: \"images/view/3.jpg\",\n    alt: \"홀2\",\n  },\n  {\n    id: \"4\",\n    src: \"images/view/4.jpg\",\n    alt: \"방1\",\n  },\n  {\n    id: \"5\",\n    src: \"images/view/5.jpg\",\n    alt: \"방2\",\n  },\n  {\n    id: \"6\",\n    src: \"images/view/6.jpg\",\n    alt: \"뒤뜰\",\n  },\n  {\n    id: \"7\",\n    src: \"images/view/7.jpg\",\n    alt: \"명함\",\n  },\n];\n","import React from \"react\";\n\nimport {\n  MDBCarousel,\n  MDBCarouselInner,\n  MDBCarouselItem,\n  MDBView,\n  //MDBContainer,\n} from \"mdbreact\";\n\nimport carouselItem from \"./CarouselItem\";\n\nconst CarouselView = () => {\n  return (\n    <MDBCarousel\n      activeItem={1}\n      length={7}\n      showControls={true}\n      showIndicators={true}\n      className=\"z-depth-1\"\n    >\n      <MDBCarouselInner>\n        {carouselItem.map((item) => (\n          <MDBCarouselItem itemId={item.id} key={item.src}>\n            <MDBView>\n              <img className=\"d-block w-100\" src={item.src} alt={item.alt} />\n            </MDBView>\n          </MDBCarouselItem>\n        ))}\n      </MDBCarouselInner>\n    </MDBCarousel>\n  );\n};\n\nexport default CarouselView;\n","import React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nconst useStyles = makeStyles(() => ({\n  fontMaple: {\n    fontFamily: \"MaplestoryOTFBold\",\n  },\n  fontRobo: {\n    fontFamily: \"Roboto\",\n  },\n}));\n\nconst ListItemLink = ({ primary, to, secondary, review }) => {\n  const classes = useStyles();\n\n  const renderLink = useMemo(\n    () =>\n      React.forwardRef((itemProps, ref) => (\n        <RouterLink to={to} ref={ref} {...itemProps} />\n      )),\n    [to]\n  );\n\n  return (\n    <li>\n      <ListItem button component={renderLink}>\n        <ListItemText\n          primary={primary}\n          secondaryTypographyProps={{\n            color: \"textSecondary\",\n            noWrap: true,\n          }}\n          primaryTypographyProps={\n            review && {\n              color: \"textSecondary\",\n            }\n          }\n          classes={{\n            secondary: classes.fontRobo,\n            primary: classes.fontMaple,\n          }}\n          secondary={secondary}\n        />\n      </ListItem>\n    </li>\n  );\n};\n\nListItemLink.propTypes = {\n  primary: PropTypes.string,\n  to: PropTypes.string.isRequired,\n  secondary: PropTypes.string,\n  review: PropTypes.bool,\n};\n\nexport default React.memo(ListItemLink);\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport Link from \"@material-ui/core/Link\";\n\nimport ListItemLink from \"../../common/MainLists/ListItemLink\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    [theme.breakpoints.up(\"md\")]: {\n      flex: 1,\n    },\n  },\n  background: {\n    backgroundColor: \"white\",\n    border: \"solid #dcdcdc\",\n    borderRadius: \"8px\",\n  },\n  title: {\n    margin: theme.spacing(2, 1, 0),\n    flex: 1,\n  },\n  content: {\n    fontSize: \"0.7rem\",\n    color: \"#808080\",\n  },\n  box: {\n    display: \"flex\",\n    alignItems: \"baseline\",\n  },\n  primary: {\n    fontFamily: \"MaplestoryOTFBold\",\n  },\n  write: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nfunction generate(element) {\n  return [0, 1, 2, 3].map((value) =>\n    React.cloneElement(element, { key: value })\n  );\n}\n\nconst ReviewList = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <div style={{ padding: \"0.4rem\" }}>\n        <Container className={classes.background}>\n          <div className={classes.box}>\n            <Typography variant=\"subtitle1\" className={classes.title} noWrap>\n              <Link component={RouterLink} to=\"/review\" color=\"textPrimary\">\n                Review\n              </Link>\n            </Typography>\n            <Link\n              component={RouterLink}\n              to=\"#\"\n              color=\"secondary\"\n              variant=\"caption\"\n              className={classes.write}\n            >\n              글 쓰기{\">\"}\n            </Link>\n          </div>\n          <div>\n            <List>\n              {generate(<ListItemLink primary=\"맛있어요!!!\" to=\"#\" review />)}\n            </List>\n          </div>\n        </Container>\n      </div>\n    </div>\n  );\n};\n\nexport default ReviewList;\n","export default [\n  {\n    img: \"images/menu/1.jpg\",\n    title: \"칼국수\",\n  },\n  {\n    img: \"images/menu/2.jpg\",\n    title: \"전복보쌈\",\n  },\n  {\n    img: \"images/menu/3.jpg\",\n    title: \"보쌈정식\",\n  },\n  {\n    img: \"images/menu/4.jpg\",\n    title: \"쭈꾸미만두\",\n  },\n];\n","import React from \"react\";\n\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport Container from \"@material-ui/core/Container\";\nimport { MDBView } from \"mdbreact\";\n\nimport tileData from \"./TileData\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper,\n    padding: \"0.4rem\",\n  },\n  gridList: {\n    flexWrap: \"nowrap\",\n    transform: \"translateZ(0)\",\n  },\n  title: {\n    color: \"#FDFEFE\",\n  },\n  titleBar: {\n    background:\n      \"linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\",\n  },\n  background: {\n    backgroundColor: \"white\",\n    border: \"solid #dcdcdc\",\n    borderRadius: \"8px\",\n  },\n  tileRoot: { display: \"flex\", alignItems: \"center\" },\n  imgFull: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n}));\n\nconst CarouselMenu = ({ handleOpen, onMouseOver }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n  return (\n    <div className={classes.root}>\n      <Container maxWidth=\"xl\" className={classes.background}>\n        <GridList className={classes.gridList} cols={1.465}>\n          {tileData.map((tile) => (\n            <GridListTile\n              key={tile.img}\n              classes={{\n                root: classes.tileRoot,\n                imgFullHeight: classes.imgFull,\n                imgFullWidth: classes.imgFull,\n              }}\n              style={{\n                height: matches ? \"auto\" : \"68.2594vw\",\n                margin: \"0.5rem 0\",\n              }}\n            >\n              <MDBView hover zoom>\n                <img\n                  src={tile.img}\n                  alt={tile.title}\n                  onClick={handleOpen}\n                  className=\"img-fluid\"\n                  style={{\n                    height: matches ? \"auto\" : \"68.2594vw\",\n                    cursor: \"pointer\",\n                  }}\n                  onMouseOver={onMouseOver}\n                />\n                <GridListTileBar\n                  title={tile.title}\n                  classes={{\n                    root: classes.titleBar,\n                    title: classes.title,\n                  }}\n                />\n              </MDBView>\n            </GridListTile>\n          ))}\n        </GridList>\n      </Container>\n    </div>\n  );\n};\n\nexport default React.memo(CarouselMenu);\n","import React, { useState, useCallback, useMemo } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AddShoppingCartIcon from \"@material-ui/icons/AddShoppingCart\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst checkRange = (num) => {\n  if (num > 10 || num < 1) return true;\n  else return false;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  media: {\n    height: 0,\n    paddingTop: \"100%\", // 1:1\n    width: 250,\n\n    [theme.breakpoints.up(\"xs\")]: {\n      width: 300,\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 400,\n    },\n  },\n  cart: {\n    marginLeft: \"auto\",\n  },\n  textField: {\n    width: \"1.5rem\",\n  },\n}));\n\nconst MenuCard = ({ handleClose }) => {\n  const classes = useStyles();\n  const [num, setNum] = useState(1);\n\n  const addOnClick = useCallback(() => {\n    setNum((prevNum) => {\n      if (prevNum < 10 && prevNum >= 1) return prevNum + 1;\n      else if (prevNum < 1) return 1;\n      else return 10;\n    });\n  }, []);\n  const removeOnClick = useCallback(() => {\n    setNum((prevNum) => {\n      if (prevNum > 1 && prevNum <= 10) return prevNum - 1;\n      else if (prevNum > 10) return 10;\n      else return 1;\n    });\n  }, []);\n  const onChange = useCallback((e) => {\n    const curValue = e.target.value;\n    const newValue = curValue.replace(/[^0-9]/g, \"\");\n\n    setNum(newValue);\n  }, []);\n  const ck = useMemo(() => checkRange(num), [num]);\n\n  return (\n    <Card>\n      <CardHeader\n        action={\n          <IconButton aria-label=\"close\" onClick={handleClose}>\n            <CloseIcon />\n          </IconButton>\n        }\n        title=\"칼국수\"\n        subheader=\"7000원\"\n      />\n      <CardMedia className={classes.media} image=\"images/menu/1.jpg\" />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          칼국수 + 겉절이 + 고추다데기\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"remove\" onClick={removeOnClick}>\n          <RemoveIcon />\n        </IconButton>\n        <TextField\n          size=\"small\"\n          className={classes.textField}\n          inputProps={{\n            maxLength: 2,\n            style: { textAlign: \"center\", fontFamily: \"Roboto\" },\n          }}\n          value={num}\n          onChange={onChange}\n          error={ck}\n        />\n        <IconButton aria-label=\"add\" onClick={addOnClick}>\n          <AddIcon />\n        </IconButton>\n        <IconButton\n          className={classes.cart}\n          aria-label=\"cart\"\n          onClick={handleClose}\n        >\n          <AddShoppingCartIcon />\n        </IconButton>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default React.memo(MenuCard);\n","import React from \"react\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Grow from \"@material-ui/core/Grow\";\n\nimport MenuCard from \"../../common/MenuCard\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Grow ref={ref} {...props} />;\n});\n\nconst CardDialog = ({ open, handleClose }) => {\n  //props의 기본값은 true이다.\n  //따라서 Menu컴포넌트에 keepMounted={true}를 넘겨준 것과 같다.\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"menu card\"\n        aria-describedby=\"menu detail\"\n        keepMounted\n        TransitionComponent={Transition}\n        TransitionProps={{\n          timeout: { exit: 500 },\n          style: { transformOrigin: \"bottom right\" },\n        }}\n      >\n        <MenuCard handleClose={handleClose} />\n      </Dialog>\n    </div>\n  );\n};\n\nexport default React.memo(CardDialog);\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport Link from \"@material-ui/core/Link\";\nimport pink from \"@material-ui/core/colors/pink\";\n\nimport ListItemLink from \"../../common/MainLists/ListItemLink\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    [theme.breakpoints.up(\"md\")]: {\n      flex: 1,\n    },\n  },\n  background: {\n    backgroundColor: \"white\",\n    border: \"solid #dcdcdc\",\n    borderRadius: \"8px\",\n  },\n  info: {\n    margin: theme.spacing(2, 1, 0),\n    flex: 1,\n    color: pink[800],\n    \"&:hover\": {\n      color: theme.palette.info.dark,\n    },\n  },\n  box: {\n    display: \"flex\",\n    alignItems: \"baseline\",\n  },\n  fontRobo: {\n    fontFamily: \"Roboto\",\n  },\n}));\n\nfunction generate(element) {\n  return [0, 1].map((value) => React.cloneElement(element, { key: value }));\n}\n\nconst Notice = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <div style={{ padding: \"0.4rem\" }}>\n        <Container className={classes.background}>\n          <div className={classes.box}>\n            <Link component={RouterLink} to=\"/notice\">\n              <Typography variant=\"subtitle1\" className={classes.info}>\n                Notice\n              </Typography>\n            </Link>\n          </div>\n          <div>\n            <List>\n              {generate(\n                <ListItemLink\n                  primary=\"공지사항 제목\"\n                  to=\"#\"\n                  secondary=\"19/09/22\"\n                />\n              )}\n            </List>\n          </div>\n        </Container>\n      </div>\n    </div>\n  );\n};\n\nexport default Notice;\n","import React, { useState, useCallback } from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nimport CarouselView from \"./CarouselView\";\nimport ReviewList from \"./ReviewList\";\nimport CarouselMenu from \"./CarouselMenu\";\nimport CardDialog from \"./CardDialog\";\nimport NoticeList from \"./NoticeList\";\n\nconst Main = () => {\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = useCallback(() => {\n    setOpen(true);\n  }, []);\n  const handleClose = useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  return (\n    <>\n      <CarouselView />\n      <Grid container>\n        <Grid item xs={12} md={6}>\n          <NoticeList />\n          <ReviewList />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <CarouselMenu handleOpen={handleOpen} />\n        </Grid>\n      </Grid>\n      <CardDialog open={open} handleClose={handleClose} />\n    </>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\n\nimport Header from \"../../components/header\";\nimport Main from \"../../components/main\";\nimport Footer from \"../../components/footer\";\n\nconst MainPage = () => {\n  return (\n    <>\n      <Header main />\n      <Main />\n      <Footer />\n    </>\n  );\n};\n\nexport default MainPage;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport loadable from \"@loadable/component\";\n\nimport MainPage from \"./page/Main\";\nconst LoginPage = loadable(() => import(\"./page/Login\"));\nconst RegisterPage = loadable(() => import(\"./page/Register\"));\nconst ProfilePage = loadable(() => import(\"./page/Profile\"));\nconst AccountPage = loadable(() => import(\"./page/Account\"));\nconst FindPage = loadable(() => import(\"./page/Find\"));\nconst NoticePage = loadable(() => import(\"./page/Notice\"));\nconst ReviewPage = loadable(() => import(\"./page/Review\"));\n\nconst App = () => {\n  return (\n    <Switch>\n      <Route path={[\"/\", \"/main\"]} component={MainPage} exact={true} />\n      <Route path={\"/login\"} component={LoginPage} exact />\n      <Route path={\"/register\"} component={RegisterPage} exact />\n      <Route path={\"/profile\"} component={ProfilePage} exact />\n      <Route path={\"/account\"} component={AccountPage} exact />\n      <Route path={\"/find\"} component={FindPage} exact />\n      <Route path={\"/notice\"} component={NoticePage} exact />\n      <Route path={\"/review\"} component={ReviewPage} exact />\n      <Route\n        render={() => (\n          <div>\n            <br />\n            <h2>존재하지 않는 페이지입니다.</h2>\n          </div>\n        )}\n      />\n    </Switch>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n//mdbreact 설정\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\n//material ui font 설정\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst rk = {\n  fontFamily: \"Recipe Korea\",\n  src: `url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2001@1.1/Recipekorea.woff') format('woff')`,\n  fontWeight: \"normal\",\n  fontStyle: \"normal\",\n};\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: \"Recipe Korea\",\n  },\n  palette: {\n    primary: {\n      main: \"#2196f3\",\n      light: \"#4dabf5\",\n      dark: \"#1769aa\",\n      contrastText: \"#fff\",\n    },\n  },\n  breakpoints: {\n    values: {\n      xs: 350,\n      sm: 600,\n      md: 960,\n      lg: 1280,\n      xl: 1920,\n    },\n  },\n  overrides: {\n    MuiCssBaseline: {\n      \"@global\": {\n        \"@font-face\": [rk],\n      },\n    },\n  },\n});\n\nconst filter = \"win16|win32|win64|macintel|mac|\"; // PC일 경우 가능한 값\nif (navigator.platform) {\n  if (filter.indexOf(navigator.platform.toLowerCase()) < 0);\n  else {\n    alert(\"이 앱은 모바일 환경에 최적화되어 있습니다.\");\n  }\n}\n\nReactDOM.render(\n  <BrowserRouter basename=\"/gatmauel-user-front\">\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </MuiThemeProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\n\nconst AccountMenu = ({ menuId, accountEl, isMenuOpen, handleMenuClose }) => {\n  return (\n    <Menu\n      anchorEl={accountEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem component={Link} to=\"/profile\" onClick={handleMenuClose}>\n        프로필\n      </MenuItem>\n      <MenuItem component={Link} to=\"/account\" onClick={handleMenuClose}>\n        내 계정\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default React.memo(AccountMenu);\n","import React, { useState, useCallback } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport ScopedCssBaseline from \"@material-ui/core/ScopedCssBaseline\";\n\nimport AccountMenu from \"./AccountMenu\";\nimport Drawer from \"./Drawer\";\nimport SearchBar from \"../common/SearchBar\";\n\nconst useClasses = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  icon: {\n    display: \"block\",\n    color: \"black\",\n  },\n  section: {\n    display: \"flex\",\n  },\n  appBar: {\n    backgroundColor: \"#feffff\",\n  },\n  base: {\n    background: \"#feffff\",\n  },\n}));\n\nconst Header = ({ main }) => {\n  const classes = useClasses();\n  const [accountEl, setAccountEl] = useState(null);\n  const [drawer, setDrawer] = useState(false);\n  const [search, setSearch] = useState(false);\n  const isMenuOpen = Boolean(accountEl);\n  const menuId = \"account-menu\";\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\n\n  const handleSearch = useCallback(() => {\n    setSearch((prev) => !prev);\n  }, []);\n\n  const handleMenuOpen = useCallback((event) => {\n    setAccountEl(event.currentTarget);\n  }, []);\n  const handleMenuClose = useCallback(() => {\n    setAccountEl(null);\n  }, []);\n\n  const toggleDrawer = useCallback(\n    (open) => (event) => {\n      if (\n        event &&\n        event.type === \"keydown\" &&\n        (event.key === \"Tab\" || event.key === \"Shift\")\n      ) {\n        return;\n      }\n\n      setDrawer(open);\n    },\n    []\n  );\n\n  //{bool&&<Commponent/>}처럼 하면 bool값이 false가 되는 순간\n  //Component가 사라져 버리기 때문에 애니메이션 효과 적용이 되지 않는다.\n  //그리고 Drawer, AccountMenu 컴포넌트는 Header를 렌더링 할 때 이미 포함되어서\n  //렌더링 되므로 코드 스플리팅 의미가 없다. 코드 스플리팅 효과를 보려면\n  //{bool&&<Component/>} 방식으로 렌더링 해야 하는데 그러면\n  //애니메이션 효과가 적용되지 않는 딜레마가 생긴다.\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            aria-label=\"open drawer\"\n            onClick={toggleDrawer(true)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.icon} variant=\"h6\" noWrap>\n            <Link component={RouterLink} to=\"/\" color=\"inherit\">\n              갯마을\n            </Link>\n          </Typography>\n          <div className={classes.grow} />\n          <div className={classes.section}>\n            {search ? (\n              <ScopedCssBaseline classes={{ root: classes.base }}>\n                <SearchBar handleSearch={handleSearch} matches={matches} />\n              </ScopedCssBaseline>\n            ) : (\n              !main &&\n              matches && (\n                <IconButton\n                  aria-label=\"search\"\n                  className={classes.icon}\n                  onClick={handleSearch}\n                >\n                  <SearchIcon />\n                </IconButton>\n              )\n            )}\n            {/*TODO:추후 알림이 있을 때만 검은색(classes.icon)으로 강조되게끔한다.*/}\n            <IconButton\n              aria-label=\"show new notifications\"\n              className={classes.icon}\n            >\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"user menu\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleMenuOpen}\n              className={classes.icon}\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n      <AccountMenu\n        menuId={menuId}\n        accountEl={accountEl}\n        handleMenuClose={handleMenuClose}\n        isMenuOpen={isMenuOpen}\n      />\n      <Drawer open={drawer} toggleDrawer={toggleDrawer} />\n    </div>\n  );\n};\n\nexport default React.memo(Header);\n","import React from \"react\";\nimport clsx from \"clsx\";\n\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(0, 0.8),\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: \"25rem\",\n    border: \"solid #dcdcdc\",\n    marginTop: theme.spacing(1),\n    width: \"100%\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      marginTop: theme.spacing(0.5),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n    width: \"100%\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 2, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    width: \"100%\",\n    fontFamily: \"Roboto\",\n    transition: theme.transitions.create(\"width\"),\n    fontSize: \"0.9rem\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"0ch\",\n      \"&:focus\": { width: \"20ch\" },\n      fontSize: \"1rem\",\n    },\n  },\n}));\n\nconst SearchBar = ({ handleSearch, matches }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.search}>\n        <div className={classes.searchIcon}>\n          <SearchIcon fontSize={clsx(matches ? \"default\" : \"small\")} />\n        </div>\n        <InputBase\n          placeholder=\"Search…\"\n          classes={{\n            root: classes.inputRoot,\n            input: classes.inputInput,\n          }}\n          inputProps={{ \"aria-label\": \"search\" }}\n          onBlur={() =>\n            setTimeout(handleSearch, theme.transitions.duration.shortest)\n          }\n          autoFocus={matches}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(SearchBar);\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PhoneForwardedIcon from \"@material-ui/icons/PhoneForwarded\";\nimport Link from \"@material-ui/core/Link\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\n\nconst useStyles = makeStyles((theme) => ({\n  background: {\n    backgroundColor: \"#dcdcdc\",\n    padding: \"0.5rem\",\n    width: \"100%\",\n    position: \"absolute\",\n    bottom: -57.43,\n  },\n  footer: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n\n    [theme.breakpoints.up(\"xs\")]: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n    },\n  },\n  info: { fontFamily: \"Roboto\", color: \"black\" },\n  link: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\nconst Footer = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up(\"xs\"));\n\n  return (\n    <footer className={classes.background}>\n      <div className={classes.footer}>\n        <div>\n          <ScheduleIcon fontSize=\"small\" />\n          <Typography variant=\"caption\" className={classes.info}>\n            11:00~22:00/매월 셋째주 수요일 휴무\n          </Typography>\n        </div>\n        {matches && (\n          <div>\n            <Typography variant=\"caption\" className={classes.info}>\n              Gatmauel made by WSL\n            </Typography>\n          </div>\n        )}\n      </div>\n      <div className={classes.footer}>\n        <Link\n          href=\"tel:0314159300\"\n          className={classes.link}\n          color=\"textPrimary\"\n        >\n          <PhoneForwardedIcon fontSize=\"small\" />\n          <Typography variant=\"caption\" className={classes.info}>\n            031.415.9300\n          </Typography>\n        </Link>\n        {matches && (\n          <div>\n            <Typography\n              variant=\"caption\"\n              className={classes.info}\n              component={Link}\n              href=\"mailto:gatmauel9300@gmail.com\"\n            >\n              Plz feedback to. gatmauel9300@gmail.com\n            </Typography>\n          </div>\n        )}\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n"],"sourceRoot":""}