{"version":3,"sources":["lib/windowDimensions.js","components/notice/NoticeLitemLink.jsx","components/notice/index.js","page/Notice/index.js"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useStyles","makeStyles","theme","inline","display","fontFamily","content","React","memo","data","style","index","length","classes","renderLink","useMemo","forwardRef","itemProps","ref","to","divider","CssBaseline","Container","maxWidth","ListItem","button","component","ListItemText","primary","secondary","Typography","variant","className","color","text","secondaryTypographyProps","noWrap","root","marginTop","spacing","Notice","useTheme","matches","useMediaQuery","breakpoints","up","datas","useRef","Array","fill","filter","Row","useCallback","platform","navigator","current","indexOf","toLowerCase","SearchBar","clsx","itemCount","itemSize","itemData","NoticePage"],"mappings":"sKAEMA,EAAsB,WAAO,IAAD,EACmBC,OAEnD,MAAO,CACLC,MAJ8B,EACxBC,WAINC,OAL8B,EACLC,cAQd,SAASC,IAAuB,IAAD,EACIC,mBAC9CP,KAF0C,mBACrCQ,EADqC,KACnBC,EADmB,KAe5C,OAVAC,qBAAU,WACR,SAASC,IACPF,EAAoBT,KAKtB,OAFAC,OAAOW,iBAAiB,SAAUD,GAE3B,kBAAMV,OAAOY,oBAAoB,SAAUF,MACjD,IAEIH,I,kLChBHM,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNC,QAAS,SACTC,WAAY,UAEdC,QAAS,CACPD,WAAY,yBAoDDE,MAAMC,MAhDG,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OACvCC,EAAUb,IAEVc,EAAaC,mBACjB,kBACER,IAAMS,YAAW,SAACC,EAAWC,GAAZ,OACf,kBAAC,IAAD,eAAYC,GAAIV,EAAKU,GAAID,IAAKA,GAASD,SAE3C,CAACR,EAAKU,KAEFC,EAAUL,mBAAQ,WACtB,OAAIJ,IAAUC,EAAS,IAEtB,CAACD,EAAOC,IAEX,OACE,yBAAKF,MAAOA,GACV,kBAACW,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAACC,EAAA,EAAD,CAAUJ,QAASA,EAASK,QAAM,EAACC,UAAWZ,GAC5C,kBAACa,EAAA,EAAD,CACEC,QAAQ,wCACRC,UACE,oCACE,kBAACC,EAAA,EAAD,CACEJ,UAAU,OACVK,QAAQ,UACRC,UAAWnB,EAAQV,OACnB8B,MAAM,eAJR,YAQA,6BACCxB,EAAKyB,MAGVC,yBAA0B,CACxBJ,QAAS,QACTC,UAAWnB,EAAQP,QACnB8B,QAAQ,W,SC/ChBpC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCmC,KAAM,CACJC,UAAWpC,EAAMqC,QAAQ,QA+DdC,EA3DA,WACb,IAAM3B,EAAUb,IACVE,EAAQuC,cACRC,EAAUC,YAAczC,EAAM0C,YAAYC,GAAG,OAHhC,EAIOrD,cAAlBF,EAJW,EAIXA,OAAQF,EAJG,EAIHA,MACV0D,EAAQC,iBACZ,IAAIC,MAAM,IAAIC,KAAK,CACjBf,KAAK,gGACLf,GAAI,OAGF+B,EAASH,iBAAO,mCAIhBI,EAAMC,uBAAY,YAAoC,IAAjCzC,EAAgC,EAAhCA,MAAOD,EAAyB,EAAzBA,MAAaoC,EAAY,EAAlBrC,KACjCA,EAAOqC,EAAMnC,GAEnB,OACE,kBAAC,EAAD,CACEF,KAAMA,EACNC,MAAOA,EACPC,MAAOA,EACPC,OAAQkC,EAAMlC,WAGjB,IACGyC,EAAWtC,mBAAQ,WACvB,OACEuC,UAAUD,UACVH,EAAOK,QAAQC,QAAQF,UAAUD,SAASI,eAAiB,IAE5D,IAEH,OACE,qCACIf,GAAW,kBAACgB,EAAA,EAAD,MACb,kBAAC,IAAD,CACE1B,UAAWnB,EAAQwB,KACnB/C,OACEA,EACA,GACA,EACAqE,YAAKjB,EAAU,EAAI,OACnB,EACAiB,YAAKN,EAAW,EAAI,OAEtBO,UAAWd,EAAMS,QAAQ3C,OACzBiD,SAAU,IACVzE,MAAOA,EACP0E,SAAUhB,EAAMS,SAEfJ,GAEFE,EAAW,KAAO,kBAAC,IAAD,QC1DVU,UATI,WACjB,OACE,oCACE,kBAAC,IAAD,MACA,kBAAC,EAAD","file":"static/js/12.7b2ad290.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst getWindowDimensions = () => {\n  const { innerWidth: width, innerHeight: height } = window;\n\n  return {\n    width,\n    height,\n  };\n};\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    //뒷정리\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import React, { useMemo } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst useStyles = makeStyles((theme) => ({\n  inline: {\n    display: \"inline\",\n    fontFamily: \"Roboto\",\n  },\n  content: {\n    fontFamily: \"MaplestoryOTFBold\",\n  },\n}));\n\nconst NoticeLitemLink = ({ data, style, index, length }) => {\n  const classes = useStyles();\n\n  const renderLink = useMemo(\n    () =>\n      React.forwardRef((itemProps, ref) => (\n        <RouterLink to={data.to} ref={ref} {...itemProps} />\n      )),\n    [data.to]\n  );\n  const divider = useMemo(() => {\n    if (index !== length - 1) return true;\n    else return false;\n  }, [index, length]);\n\n  return (\n    <div style={style}>\n      <CssBaseline />\n      <Container maxWidth=\"sm\">\n        <ListItem divider={divider} button component={renderLink}>\n          <ListItemText\n            primary=\"공지사항 제목\"\n            secondary={\n              <>\n                <Typography\n                  component=\"span\"\n                  variant=\"caption\"\n                  className={classes.inline}\n                  color=\"textPrimary\"\n                >\n                  20/09/27\n                </Typography>\n                <br />\n                {data.text}\n              </>\n            }\n            secondaryTypographyProps={{\n              variant: \"body2\",\n              className: classes.content,\n              noWrap: true,\n            }}\n          />\n        </ListItem>\n      </Container>\n    </div>\n  );\n};\n\nexport default React.memo(NoticeLitemLink);\n","import React, { useRef, useCallback, useMemo } from \"react\";\nimport { FixedSizeList as List } from \"react-window\";\nimport useWindowDimensions from \"../../lib/windowDimensions\";\nimport clsx from \"clsx\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nimport SearchBar from \"../common/SearchBar\";\nimport NoticeLitemLink from \"./NoticeLitemLink\";\nimport Footer from \"../footer\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\nconst Notice = () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\n  const { height, width } = useWindowDimensions();\n  const datas = useRef(\n    new Array(20).fill({\n      text: `Wish I could come, but I'm out of town this…주방 공사합니다.`,\n      to: \"#\",\n    })\n  );\n  const filter = useRef(\"win16|win32|win64|macintel|mac|\"); // PC일 경우 가능한 값\n\n  //https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\n  //새로운 변수 이름으로 할당하기(data->datas)\n  const Row = useCallback(({ index, style, data: datas }) => {\n    const data = datas[index];\n\n    return (\n      <NoticeLitemLink\n        data={data}\n        style={style}\n        index={index}\n        length={datas.length}\n      />\n    );\n  }, []);\n  const platform = useMemo(() => {\n    return (\n      navigator.platform &&\n      filter.current.indexOf(navigator.platform.toLowerCase()) < 0\n    );\n  }, []);\n\n  return (\n    <>\n      {!matches && <SearchBar />}\n      <List\n        className={classes.root}\n        height={\n          height -\n          56 -\n          8 -\n          clsx(matches ? 0 : 37.09) -\n          8 -\n          clsx(platform ? 0 : 57.43)\n        }\n        itemCount={datas.current.length}\n        itemSize={100}\n        width={width}\n        itemData={datas.current}\n      >\n        {Row}\n      </List>\n      {platform ? null : <Footer />}\n    </>\n  );\n};\n\nexport default Notice;\n","import React from \"react\";\n\nimport Header from \"../../components/header\";\nimport Notice from \"../../components/notice\";\n\nconst NoticePage = () => {\n  return (\n    <>\n      <Header />\n      <Notice />\n    </>\n  );\n};\n\nexport default NoticePage;\n"],"sourceRoot":""}